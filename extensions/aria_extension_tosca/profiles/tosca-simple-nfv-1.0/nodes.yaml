# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

node_types:

  tosca.nodes.nfv.VDU.Compute:
    _extensions:
      shorthand_name: VDU.Compute
      type_qualified_name: tosca:VDU.Compute
      specification: tosca-simple-nfv-1.0
      specification_section: 5.9.2
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd04/tosca-nfv-v1.0-csd04.html#_Toc482896079'
    description: >-
      The TOSCA nfv.VDU.Compute node type represents the virtual compute part of a VDU entity which
      it mainly describes the deployment and operational behavior of a VNF component (VNFC), as
      defined by [ETSI NFV IFA011].
    derived_from: tosca.nodes.Compute
    properties:
      name:
        description: Human readable name of the Vdu
        type: string
        required: true
      description:
        description: Human readable description of the Vdu
        type: string
        required: true
      boot_order:
        description: >-
          The key indicates the boot index (lowest index defines highest boot priority).
          The Value references a descriptor from which a valid boot device is created e.g.
          VirtualStorageDescriptor from which a VirtualStorage instance is created. If no boot order
          is defined the default boot order defined in the VIM or NFVI shall be used.
        type: type: # explicit index (boot index) not necessary, contrary to IFA011
          entry_schema:
            type: string
        required: false
      nfvi_constraints:
        description: >-
          Describes constraints on the NFVI for the VNFC instance(s) created from this Vdu.
          For example, aspects of a secure hosting environment for the VNFC instance that involve
          additional entities or processes. More software images can be attached to the
          virtualization container using virtual_storage.
        type: list
        entry_schema:
          type: string
        required: false
      configurable_properties:
        description: Describes the configurable properties of all VNFC instances based on this VDU.
        type: map
        entry_schema:
          type: tosca.datatypes.nfv.VnfcConfigurableProperties
        required: true
    attributes: # ARIA NOTE: The attributes are only described in section [5.9.2.5 Definition], but
                # are not mentioned in section [5.9.2.2 Attributes].
                # they are inherited from tosca.nodes.Compute.
      private_address:
        status: deprecated
      public_address:
        status: deprecated
      networks:
        status: deprecated
      ports:
        status: deprecated
    capabilites:
      virtual_compute:
        description: Describes virtual compute resources capabilities.
        type: tosca.capabilities.nfv.VirtualCompute
      virtual_binding:
        description: Defines ability of VirtualBindable
        type: tosca.capabilities.nfv.VirtualBindable

      # ARIA NOTE: the "monitoring_parameter" capability is already commented out in the spec, and
      # is copied here verbatim from section [5.9.2.5 Definition].
      # However, in section [5.9.2.4 Capabilities], the type of this capability is
      # tosca.capabilities.nfv.Metric, and it also has a description.
      # In addition, the spec might be wrong here regarding the name of this capability, since a
      # very similar capability exists in section [5.9.6 tosca.nodes.nfv.VnfVirtualLinkDesc] and is
      # named "monitoring_parameters" (as opposed to "monitoring_parameter" in here)

      #monitoring_parameter:
        # modeled as ad hoc (named) capabilities in VDU node template
        # for example:
        #capabilities:
        #  cpu_load: tosca.capabilities.nfv.Metric
        # memory_usage: tosca.capabilities.nfv.Metric

      host: #Editor note: FFS. How this capabilities should be used in NFV Profile
        type: tosca.capabilities.Container
        valid_source_types: [tosca.nodes.SoftwareComponent]
        occurrences: [ 0,UNBOUNDED ]
      endpoint: # ARIA NOTE: lacks type in contrast with the TOSCA spec
        occurrences: [ 0,0 ]
      os: # ARIA NOTE: lacks type in contrast with the TOSCA spec
        occurrences: [ 0,0 ]
      scalable: #Editor note: FFS. How this capabilities should be used in NFV Profile
        type: tosca.capabilities.Scalable
      binding: # ARIA NOTE: lacks type in contrast with the TOSCA spec
        occurrences: [0,UNBOUNDED]
      # ARIA NOTE: The aforementioned two capabilities ('host' and 'scalable') are only described in
      # section [5.9.2.5 Definition], but are not mentioned in section [5.9.2.4 Capabilities].
      # they are inherited from tosca.nodes.Compute.
    requirements:
      - virtual_storage:
          capability: tosca.capabilities.nfv.VirtualStorage
          # ARIA NOTE: the above capability type does not exist in csd04...
          relationship: tosca.relationships.nfv.VDU.AttachedTo
          # ARIA NOTE: the above relationship type does not exist in csd04...
          node: tosca.nodes.nfv.VDU.VirtualStorage
          occurences: [ 0, UNBOUNDED ]
      - local_storage: #For NFV Profile, this requirement is deprecated.
          occurrences: [0,0]
        # ARIA NOTE: what to do with this capability?
    artifacts:
      - sw_image:
          description: >-
            Describes the software image which is directly loaded on the virtualization container
            realizing this virtual storage.
          file: # ARIA NOTE: missing value even though it is required in TOSCA
          type: tosca.artifacts.nfv.SwImage
        # ARIA NOTE: this description is exactly the same as the description of the artifact of the
        # same name of tosca.nodes.nfv.VDU.VirtualStorage. While the description seems fitting there
        # here it seems it should mention something in the lines of "realizing this compute node",
        # and not "realizing this virtual storage"

  tosca.nodes.nfv.VDU.VirtualStorage:
    _extensions:
      shorthand_name: VirtualStorage
      # ARIA NOTE: inconsistent with tosca.nodes.nfv.VDU.VirtualStorage's shorthand_name,
      # which is VDU.Compute
      type_qualified_name: tosca:VirtualStorage
      # ARIA NOTE: inconsistent with tosca.nodes.nfv.VDU.VirtualStorage's type_qualified_name,
      # which is tosca:VDU.Compute
      specification: tosca-simple-nfv-1.0
      specification_section: 5.9.3
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd04/tosca-nfv-v1.0-csd04.html#_Toc482896080'
    description: >-
      The NFV VirtualStorage node type represents a virtual storage entity which it describes the
      deployment and operational behavior of a virtual storage resources, as defined by
      [ETSI NFV IFA011].
    derived_from: tosca.nodes.Root
      properties:
        # ARIA NOTE: the "id" property is already commented out in the spec, and is copied here
        # verbatim from section [5.9.3.5 Definition]. In section [5.9.3.1 Properties], this property
        # does not have a type and a required values, but does have a description
        #id:
          # node name
        type_of_storage:
          description: Type of virtualized storage resource
          type: string
          required: true
        size_of_storage:
          description: Size of virtualized storage resource (in GB)
          # ARIA NOTE: if the description states that the property assignment should be in GB, why
          # does the type is 'scalar-unit.size' and not just integer? In addition, why does section
          # [5.9.3.1 Properties] states in the constraints column of this attribute that the value
          # should be a number?
          type: scalar-unit.size
          required: true
        rdma_enabled:
          description: Indicate if the storage support RDMA
          type: boolean
          required: false
        capabilities:
          virtual_storage:
            type: tosca.capabilities.nfv.VirtualStorage
          # ARIA NOTE: the above capability type does not exist in csd04. csd04 even states:
          # "Editor Note: Need to create tosca.capabilities.nfv.VirtualStorage capability type."
        artifacts:
          - sw_image:
              description: >-
                Describes the software image which is directly loaded on the virtualization
                container realizing this virtual storage.
              file: # ARIA NOTE: missing value even though it is required in TOSCA
              type: tosca.artifacts.nfv.SwImage

  tosca.nodes.nfv.Cpd:
    _extensions:
      shorthand_name: Cpd
      type_qualified_name: tosca:Cpd
      specification: tosca-simple-nfv-1.0
      specification_section: 5.9.4
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd04/tosca-nfv-v1.0-csd04.html#_Toc482896081'
  derived_from: tosca.nodes.Root
  description: >-
    The TOSCA nfv.Cpd node represents network connectivity to a compute resource or a VL as defined
    by [ETSI GS NFV-IFA 011]. This is an abstract type used as parent for the various Cpd types.
  derived_from: tosca.nodes.Root
  properties:
    layer_protocol:
      description: Identifies which protocol the connection point uses for connectivity purposes
      type: string
      constraints:
        - valid_values: [ ethernet, mpls, odu2, ipv4, ipv6, pseudo_wire ]
      required: false
    role: # Name in ETSI NFV IFA011 v0.7.3 cpRole
      description: >-
        Identifies the role of the port in the context of the traffic flow patterns in the VNF or
        parent NS. For example a VNF with a tree flow pattern within the VNF will have legal cpRoles
        of ROOT and LEAF
      type: string
      constraints:
        - valid_values: [ root, leaf ]
      required: false
    description:
      description: >-
        Provides human-readable information on the purpose of the connection point
        (e.g. connection point for control plane traffic).
      type: string
      required: false
    address_data:
      description: >-
        Provides information on the addresses to be assigned to the connection point(s) instantiated
        from this Connection Point Descriptor.
      type: list
      entry_schema:
        type: tosca.datatype.nfv.AddressData
      required: false

  tosca.nodes.nfv.VduCpd:
    _extensions:
       shorthand_name: VduCpd
       type_qualified_name: tosca:VduCpd
       specification: tosca-simple-nfv-1.0
       specification_section: 5.9.5
       specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd04/tosca-nfv-v1.0-csd04.html#_Toc482896082'
    description: >-
      The TOSCA nfv.VduCpd node type represents a type of TOSCA Cpd node and describes network
      connectivity between a VNFC instance (based on this VDU) and an internal VL as defined by
      [ETSI GS NFV-IFA 011].
    derived_from: tosca.nodes.nfv.Cpd
    properties:
      bitrate_requirement:
        description: Bitrate requirement on this connection point.
        type: integer
        required: false
      virtual_network_interface_requirements:
        description: >-
          Specifies requirements on a virtual network interface realising the CPs instantiated from
          this CPD.
        type: list
        entry_schema:
          type: VirtualNetworkInterfaceRequirements
        required: false
    requirements:
      - virtual_link:
          description: Describes the requirements for linking to virtual link
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          node: tosca.nodes.nfv.VnfVirtualLinkDesc
      - virtual_binding:
          description: Describe the requirement for binding with VDU
          capability: tosca.capabilities.nfv.VirtualBindable
          relationship: tosca.relationships.nfv.VirtualBindsTo
          node: tosca.nodes.nfv.VDU.Compute
          # ARIA NOTE: the spec states "node: tosca.nodes.nfv.VDU", but this is probably a mistake
          # as tosca.nodes.nfv.VDU was removed, and replaced with tosca.nodes.nfv.VDU.Compute and
          # tosca.nodes.nfv.VDU.VirtualStorage. I choose to use tosca.nodes.nfv.VDU.Compute, but it
          # can be changed upon discussion.

  tosca.nodes.nfv.VnfVirtualLinkDesc:
    _extensions:
       shorthand_name: VnfVirtualLinkDesc
       type_qualified_name: tosca:VnfVirtualLinkDesc
       specification: tosca-simple-nfv-1.0
       specification_section: 5.9.6
       specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd04/tosca-nfv-v1.0-csd04.html#_Toc482896083'
    description: >-
      The TOSCA nfv.VnfVirtualLinkDesc node type represents a logical internal virtual link as
      defined by [ETSI GS NFV-IFA 011].
    derived_from: tosca.nodes.Root
    properties:
      connectivity_type:
        description: >-
          specifies the protocol exposed by the VL and the flow pattern supported by the VL
        type: tosca.datatypes.nfv.ConnectivityType
        required: true
      description:
        description: >-
          provides human-readable information on the purpose of the VL (e.g. control plane traffic)
        type: string
        required: false
      test_access:
        description: >-
          Test access facilities available on the VL (e.g. none, passive, monitoring, or active
          (intrusive) loopbacks at endpoints
        type: string
        required: false
     # ARIA NOTE: I commented out the "vl_flavours" property as it references the data type
     # tosca.datatypes.nfv.VlFlavour, which does not exist in csd04 (it is only mentioned in section
     # 5.9.6.4 as TBD)
     #vl_flavours:
     #  description: Describe a specific flavour of the VL with specific bitrate requirements.
     #  type: map
     #    entry_schema:
     #      type: tosca.datatypes.nfv.VlFlavour
     #   required: true
    capabilities:
      virtual_linkable:
       type: tosca.capabilities.nfv.VirtualLinkable

      # ARIA NOTE: the "monitoring_parameters" capability is already commented out in the spec, and
      # is copied here verbatim from section [5.9.6.5 Definition].
      # However, in section [5.9.6.4 Capabilities], the type of this capability is
      # tosca.capabilities.nfv.Metric, and it also has a description.
      # In addition, the spec might be wrong here regarding the name of this capability, since a
      # very similar capability exists in section [5.9.2 tosca.nodes.nfv.VDU.Compute] and is
      # named "monitoring_parameter" (as opposed to "monitoring_parameters" in here)

      # monitoring_parameters:
        # modeled as ad hoc (named) capabilities in node template

  tosca.nodes.nfv.FP:
    _extensions:
      shorthand_name: FP # ARIA NOTE: the spec must be mistaken here, says "VL"
      type_qualified_name: tosca:FP
      specification: tosca-simple-nfv-1.0
      specification_section: 10.5.1
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc447714722'
    description: >-
      The NFV FP node type represents a logical network forwarding path entity as defined by [ETSI GS NFV-MAN 001 v1.1.1].
    derived_from: tosca.nodes.Root
    properties:
      policy:
        description: >-
          A policy or rule to apply to the NFP
        type: string
        required: false
    requirements:
      - forwarder:
          capability: tosca.capabilities.nfv.Forwarder

  tosca.nodes.nfv.VL.ELine:
    _extensions:
      shorthand_name: VL.ELine # ARIA NOTE: omitted in the spec
      type_qualified_name: tosca:VL.ELine
      specification: tosca-simple-nfv-1.0
      specification_section: 9.2
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc419290256'
    description: >-
      The NFV VL.ELine node represents an E-Line virtual link entity.
    derived_from: tosca.nodes.nfv.VL  
    capabilities:
      virtual_linkable:
        type: tosca.capabilities.nfv.VirtualLinkable
        occurrences: [ 2, 2 ] # ARIA NOTE: section 3.2.3.1 states that the upper bound must be
                              # higher than the lower bound, but section 3.6.2.1 uses a range with
                              # equal bounds

  tosca.nodes.nfv.VL.ELAN:
    _extensions:
      shorthand_name: VL.ELAN # ARIA NOTE: omitted in the spec
      type_qualified_name: tosca:VL.ELAN
      specification: tosca-simple-nfv-1.0
      specification_section: 9.3
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc419290257'
    description: >-
      The NFV VL.ELan node represents an E-LAN virtual link entity.
    derived_from: tosca.nodes.network.Network

  tosca.nodes.nfv.VL.ETree:
    _extensions:
      shorthand_name: VL.ETree # ARIA NOTE: omitted in the spec
      type_qualified_name: tosca:VL.ETree
      specification: tosca-simple-nfv-1.0
      specification_section: 9.4
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc419290258'
    description: >-
      The NFV VL.ETree node represents an E-Tree virtual link entity.
    derived_from: tosca.nodes.nfv.VL

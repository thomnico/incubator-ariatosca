# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

node_types:

  tosca.nodes.nfv.VNF:
    _extensions:
      shorthand_name: VNF # ARIA NOTE: omitted in the spec
      type_qualified_name: tosca:VNF
      specification: tosca-simple-nfv-1.0
      specification_section: 8.5.1
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc379455076'
    description: >-
      The NFV VNF Node Type represents a Virtual Network Function as defined by [ETSI GS NFV-MAN 001 v1.1.1]. It is the default
      type that all other VNF Node Types derive from. This allows for all VNF nodes to have a consistent set of features for
      modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).
    derived_from: tosca.nodes.Root
    properties:
      id:
        description: >-
          ID of this VNF.
        type: string
      vendor:
        description: >-
          Name of the vendor who generate this VNF.
        type: string
      version:
        description: >-
          Version of the software for this VNF.
        type: string
    requirements:
      - virtual_link:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo

  tosca.nodes.nfv.Cpd:
    _extensions:
      shorthand_name: Cpd
      type_qualified_name: tosca:Cpd
      specification: tosca-simple-nfv-1.0
      specification_section: 5.9.4
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd04/tosca-nfv-v1.0-csd04.html#_Toc482896081'
  derived_from: tosca.nodes.Root
  description: >-
    The TOSCA nfv.Cpd node represents network connectivity to a compute resource or a VL as defined
    by [ETSI GS NFV-IFA 011]. This is an abstract type used as parent for the various Cpd types.
  derived_from: tosca.nodes.Root
  properties:
    layer_protocol:
      description: Identifies which protocol the connection point uses for connectivity purposes
      type: string
      constraints:
        - valid_values: [ ethernet, mpls, odu2, ipv4, ipv6, pseudo_wire ]
      required: false
    role: # Name in ETSI NFV IFA011 v0.7.3 cpRole
      description: >-
        Identifies the role of the port in the context of the traffic flow patterns in the VNF or
        parent NS. For example a VNF with a tree flow pattern within the VNF will have legal cpRoles
        of ROOT and LEAF
      type: string
      constraints:
        - valid_values: [ root, leaf ]
      required: false
    description:
      description: >-
        Provides human-readable information on the purpose of the connection point
        (e.g. connection point for control plane traffic).
      type: string
      required: false
    address_data:
      description: >-
        Provides information on the addresses to be assigned to the connection point(s) instantiated
        from this Connection Point Descriptor.
      type: list
      entry_schema:
        type: tosca.datatype.nfv.AddressData
      required: false

  tosca.nodes.nfv.VduCpd:
    _extensions:
       shorthand_name: VduCpd
       type_qualified_name: tosca:VduCpd
       specification: tosca-simple-nfv-1.0
       specification_section: 5.9.5
       specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd04/tosca-nfv-v1.0-csd04.html#_Toc482896082'
    description: >-
      The TOSCA nfv.VduCpd node type represents a type of TOSCA Cpd node and describes network
      connectivity between a VNFC instance (based on this VDU) and an internal VL as defined by
      [ETSI GS NFV-IFA 011].
    derived_from: tosca.nodes.nfv.Cpd
    properties:
      bitrate_requirement:
        description: Bitrate requirement on this connection point.
        type: integer
        required: false
      virtual_network_interface_requirements:
        description: >-
          Specifies requirements on a virtual network interface realising the CPs instantiated from
          this CPD.
        type: list
        entry_schema:
          type: VirtualNetworkInterfaceRequirements
        required: false
    requirements:
      - virtual_link:
          description: Describes the requirements for linking to virtual link
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          node: tosca.nodes.nfv.VnfVirtualLinkDesc
      - virtual_binding:
          description: Describe the requirement for binding with VDU
          capability: tosca.capabilities.nfv.VirtualBindable
          relationship: tosca.relationships.nfv.VirtualBindsTo
          node: tosca.nodes.nfv.VDU

  VnfVirtualLinkDesc:
    _extensions:
       shorthand_name: VnfVirtualLinkDesc
       type_qualified_name: tosca:VnfVirtualLinkDesc
       specification: tosca-simple-nfv-1.0
       specification_section: 5.9.6
       specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd04/tosca-nfv-v1.0-csd04.html#_Toc482896083'
    description: >-
      The TOSCA nfv.VnfVirtualLinkDesc node type represents a logical internal virtual link as
      defined by [ETSI GS NFV-IFA 011].
    derived_from: tosca.nodes.Root
    properties:
      connectivity_type:
        description: >-
          specifies the protocol exposed by the VL and the flow pattern supported by the VL
        type: tosca.datatypes.nfv.ConnectivityType
        required: true
      description:
        description: >-
          provides human-readable information on the purpose of the VL (e.g. control plane traffic)
        type: string
        required: false
      test_access:
        description: >-
          Test access facilities available on the VL (e.g. none, passive, monitoring, or active
          (intrusive) loopbacks at endpoints
        type: string
        required: false
     # ARIA NOTE: I commented out the "vl_flavours" property as it references the data type
     # tosca.datatypes.nfv.VlFlavour, which does not exist in csd04 (it is only mentioned in section
     # 5.9.6.4 as TBD)
     #vl_flavours:
     #  description: Describe a specific flavour of the VL with specific bitrate requirements.
     #  type: map
     #    entry_schema:
     #      type: tosca.datatypes.nfv.VlFlavour
     #   required: true
    capabilities:
      virtual_linkable:
       type: tosca.capabilities.nfv.VirtualLinkable
      # ARIA NOTE: the "monitoring_parameters" capability is already commented out in the spec, and
      # is copied here verbatim from section [5.9.6.5 Definition].
      # However, in section [5.9.6.4 Capabilities], the type of this capability is
      # tosca.capabilities.nfv.Metric, and it also has a description.

      # monitoring_parameters:
        # modeled as ad hoc (named) capabilities in node template

#  tosca.nodes.nfv.VDU:
#    _extensions:
#      shorthand_name: VDU
#      type_qualified_name: tosca:VDU
#      specification: tosca-simple-nfv-1.0
#      specification_section: 8.5.2
#      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc419290242'
#    description: >-
#      The NFV vdu node type represents a logical vdu entity as defined by [ETSI GS NFV-MAN 001 v1.1.1].
#    derived_from: tosca.nodes.Root
#    capabilities:
#      nfv_compute:
#        type: tosca.capabilities.Compute.Container.Architecture
#      virtual_binding:
#        type: tosca.capabilities.nfv.VirtualBindable
#      monitoring_parameter:
#        type: tosca.capabilities.nfv.Metric

#  tosca.nodes.nfv.CP:
#    _extensions:
#      shorthand_name: CP
#      type_qualified_name: tosca:CP
#      specification: tosca-simple-nfv-1.0
#      specification_section: 8.5.3
#      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc419290245'
#    description: >-
#      The NFV CP node represents a logical connection point entity as defined by [ETSI GS NFV-MAN 001 v1.1.1]. A connection point
#      may be, for example, a virtual port, a virtual NIC address, a physical port, a physical NIC address or the endpoint of an IP
#      VPN enabling network connectivity. It is assumed that each type of connection point will be modeled using subtypes of the CP
#      type.
#    derived_from: tosca.nodes.network.Port
#    properties:
#      type:
#        description: >-
#          This may be, for example, a virtual port, a virtual NIC address, a SR-IOV port, a physical port, a physical NIC address
#          or the endpoint of an IP VPN enabling network connectivity.
#        type: string
#      anti_spoofing_protection:
#        description: >-
#          Indicates of whether anti-spoofing rule need to be enabled for this vNIC. This is applicable only when CP type is virtual
#          NIC (vPort).
#        type: boolean
#        required: false
#    attributes:
#      address:
#        description: >-
#          The actual virtual NIC address that is been assigned when instantiating the connection point.
#        type: string
#    requirements:
#      - virtual_link:
#          capability: tosca.capabilities.nfv.VirtualLinkable
#          relationship: tosca.relationships.nfv.VirtualLinksTo
#      - virtual_binding:
#          capability: tosca.capabilities.nfv.VirtualBindable
#          relationship: tosca.relationships.nfv.VirtualBindsTo

  tosca.nodes.nfv.FP:
    _extensions:
      shorthand_name: FP # ARIA NOTE: the spec must be mistaken here, says "VL"
      type_qualified_name: tosca:FP
      specification: tosca-simple-nfv-1.0
      specification_section: 10.5.1
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc447714722'
    description: >-
      The NFV FP node type represents a logical network forwarding path entity as defined by [ETSI GS NFV-MAN 001 v1.1.1].
    derived_from: tosca.nodes.Root
    properties:
      policy:
        description: >-
          A policy or rule to apply to the NFP
        type: string
        required: false
    requirements:
      - forwarder:
          capability: tosca.capabilities.nfv.Forwarder

  #
  # Virtual link
  #

#  tosca.nodes.nfv.VL:
#    _extensions:
#      shorthand_name: VL
#      type_qualified_name: tosca:VL
#      specification: tosca-simple-nfv-1.0
#      specification_section: 9.1
#      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc419290251'
#    description: >-
#      The NFV VL node type represents a logical virtual link entity as defined by [ETSI GS NFV-MAN 001 v1.1.1]. It is the default
#      type from which all other virtual link types derive.
#    derived_from: tosca.nodes.network.Network
#    properties:
#      vendor:
#        description: >-
#          Vendor generating this VLD.
#        type: string
#    capabilities:
#      virtual_linkable:
#        type: tosca.capabilities.nfv.VirtualLinkable

  tosca.nodes.nfv.VL.ELine:
    _extensions:
      shorthand_name: VL.ELine # ARIA NOTE: omitted in the spec
      type_qualified_name: tosca:VL.ELine
      specification: tosca-simple-nfv-1.0
      specification_section: 9.2
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc419290256'
    description: >-
      The NFV VL.ELine node represents an E-Line virtual link entity.
    derived_from: tosca.nodes.nfv.VL  
    capabilities:
      virtual_linkable:
        type: tosca.capabilities.nfv.VirtualLinkable
        occurrences: [ 2, 2 ] # ARIA NOTE: section 3.2.3.1 states that the upper bound must be
                              # higher than the lower bound, but section 3.6.2.1 uses a range with
                              # equal bounds

  tosca.nodes.nfv.VL.ELAN:
    _extensions:
      shorthand_name: VL.ELAN # ARIA NOTE: omitted in the spec
      type_qualified_name: tosca:VL.ELAN
      specification: tosca-simple-nfv-1.0
      specification_section: 9.3
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc419290257'
    description: >-
      The NFV VL.ELan node represents an E-LAN virtual link entity.
    derived_from: tosca.nodes.network.Network

  tosca.nodes.nfv.VL.ETree:
    _extensions:
      shorthand_name: VL.ETree # ARIA NOTE: omitted in the spec
      type_qualified_name: tosca:VL.ETree
      specification: tosca-simple-nfv-1.0
      specification_section: 9.4
      specification_url: 'http://docs.oasis-open.org/tosca/tosca-nfv/v1.0/csd03/tosca-nfv-v1.0-csd03.html#_Toc419290258'
    description: >-
      The NFV VL.ETree node represents an E-Tree virtual link entity.
    derived_from: tosca.nodes.nfv.VL
